services:
  titanco_frontend:
    container_name: titanco_frontend
    image: thwntn/titanco-frontend:${VERSION}
    env_file:
      - .env
    build:
      dockerfile: Build/Ngix/Dockerfile
      tags:
        - thwntn/titanco-frontend:${VERSION}
    ports:
      - 8080:80
    restart: always
  titanco_backend:
    container_name: titanco_backend
    image: thwntn/titanco-backend:${VERSION}
    env_file:
      - .env
    build:
      dockerfile: Build/Backend/Dockerfile
      tags:
        - thwntn/titanco-backend:${VERSION}
    volumes:
      - ./.Cache:/root:rw
      - ./.File:/App/File:rw
    ports:
      - 6501:6501
    networks:
      titan:
        ipv4_address: 172.22.0.3
    restart: always
  sql_server:
    container_name: sql_server
    image: thwntn/sql-server:0.0.1
    env_file:
      - .env
    build:
      dockerfile: Build/SQLServer/Dockerfile
      tags:
        - thwntn/sql-server:0.0.1
    volumes:
      - ./.cache:/var/opt/mssql - /var/opt/mssql/data:rwx
    ports:
      - 1433:1433
    networks:
      titan:
        ipv4_address: 172.22.0.2
    restart: always

networks:
  titan:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
          gateway: 172.22.0.1
